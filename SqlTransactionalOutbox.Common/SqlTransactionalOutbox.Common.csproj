<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <RootNamespace>SqlTransactionalOutbox</RootNamespace>
    <Version>1.0.3</Version>
    <Authors>BBernard / CajunCoding</Authors>
    <Copyright>Copyright © 2021</Copyright>
    <Description>The Common interfaces and base/shared components for the SqlTransactionalOutbox framework.
		A lightweight library &amp; framework for implementing the Transactional Outbox pattern in .Net with default implementaions for SQL Server &amp; messaging via Azure Service Bus. Some of the key benefits offered are support for running in serverless environments (e.g. AzureFunctions) or in standard hosted .Net applications (via 'worker threads'), and support for enforcing true FIFO processing to preserve ordering, and a simplified abstractions for the Outbox, Outbox Processing, and Messaging systems utilized.
	</Description>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/cajuncoding/SqlTransactionalOutbox</PackageProjectUrl>
    <RepositoryUrl>https://github.com/cajuncoding/SqlTransactionalOutbox</RepositoryUrl>
    <PackageTags>sql server sqlserver sql-server transactional outbox transactional-outbox outbox-pattern microservice eventservices event-services event-notifications azure service bus azurefunctions azure-functions</PackageTags>
    <PackageReleaseNotes>
		Release Notes:
		- Update dependencies to resolve issues with Vulnerabilities and Deprecated versions.

		Prior Release Notes:
		- Improved support for customizing OutboxTable Configuration and Distributed Mutex Lock settings via SqlTransactionalOutboxInitializer.Configure() initialization.
		- (Breaking Changes) Fully migrated to Azure.Messaging.ServiceBus SDK/Library for future support; other AzureServiceBus libraries are all fully deprecated by Microsoft.
		- The main breaking change is now the use of ServiceBusReceivedMessage vs deprecated Message object.
		- All Interfaces and the genearl abstraction are still valid so code updates are straightforward.
		- This now enables Azure Functions v4 (with .Net 6) to work as expected with AzureServiceBus bindings (requires ServiceBusReceivedMessage).
		- Also fixed several bugs/issues, and optimized Options and Naming which may also have some small Breaking Changes.
		- Improved Error Handling when Processing of Outbox has unexpected Exceptions.
		- Also added a new Default implementation for AsyncThreadOutboxProcessingAgent (to run the Processing in an async Thread; ideal for AspNet Applications).
		- Improved Json serialization to eliminate unnecessary storing of Null properties and consistently use camelCase Json.
		- Added full Console Sample Application (in Github Source) that provides Demo of the full lifecycle of the Sql Transactional Outbox.
		- Add Convenience Method for PayloadBuilder.FromObject().
		- Add lazy loaded convenience property ParsedBody to OutboxReceivedItem.
		- Initial BETA release for core interfaces and shared components; supports default implementations of SQL Server transactional outbox &amp; Azure Service Bus publishing.
</PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\README.md" Link="README.md" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
  </ItemGroup>

</Project>
